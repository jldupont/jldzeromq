#!/usr/bin/env python
"""
    Monitors topics of PUB/SUB communication 

    Command Line:
    
        jld0sub connect_to topic [topic ...]

        where 'connect_to' is a socket address e.g. tcp://localhost:5555


    Example:
    
        jld0sub tcp://127.0.0.1:9002 test test1 test2
        

    @author: Jean-Lou Dupont
"""
import os, sys, argparse
op=os.path

try:
    import jldzeromq
except:
    ### must be in dev mode then    
    this_dir=op.dirname(__file__)
    lib_path=op.abspath(op.join(this_dir, ".."))
    sys.path.insert(0, lib_path)
    import jldzeromq

########################################################################

DESC="SUBcribe to topic(s)"
DEFAULTS={
          }

def main():
    try:
        import jldzeromq.do_setup
        import logging
        import jldzeromq.do_checks
        
        parser=argparse.ArgumentParser(description=DESC, fromfile_prefix_chars='@')
        parser.add_argument('-jmm', dest='just_msg_mode', action="store_true",  help="JSON mode", default=False)
        parser.add_argument('-ss',  dest='sock_source',   type=str,  help="Address for socket", required=True)        
        parser.add_argument('-tp',  dest='topics',        type=str, nargs='+', help="Topic(s) to subscribe to", default="")
        parser.add_argument('-tpf', dest='topics_filter', type=str, nargs='+', help="Topic(s) to filter out", default="")
        
        parser.add_argument('-m',   dest='module',        type=str,  help="Python module name", default=None)
        parser.add_argument('-f',   dest='function',      type=str,  help="Python function name inside module", default=None)
        parser.add_argument('-a',   dest='fargs',         type=str,  help="Python function name inside module", default=[], nargs="+")
        
        args=parser.parse_args()
        
        from jldzeromq.tools_sys import dnorm, info_dump
        from jldzeromq.script_sub import run
        
        args=dnorm(vars(args))
        info_dump(args, 20)       
        run(**args)


    except KeyboardInterrupt:
        logging.info("..Exiting")
        sys.exit(0)##no probs
        
    except Exception,e:
        logging.error(str(e))
        sys.exit(1)
        

sys.exit(main())
